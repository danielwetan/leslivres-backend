REQUIREMENT:
- CRUD
- Image Upload
- Search, Sort, Pagination 
- Allowed CORS
- Push to Github repository with good README
- Login/Register with JWT and Password Hashing
- Create Flowchart of your App

image => package multer
di database simpan url gambar
simpan image di local environment
sort & pagination => query params

search => mysql where
sort => myqsl order by asc
pagination => mysql limit and offset

### Example of query params ###
localhost:3000/books?search=fiction&sort=newest&page=2
// search => in title
// sort => newest, availability
// page => limit and offset 

cors => cors npm** satu page buat 8 data, personal think
search, sort, page => dalam satu api

Belajar:
- High Order Array Function
- Async Await
- Review Node & Express Traversy Media
- Review this

// Hasil hash selalu berubah-ubah

### JWT AUTHENTICATION
// Login dapat jwt, lalu akses api menggunakan jwt
// Token => Kunci untuk mengakses API
// Token Expired
// Token wrong error
// Ketika token expired lakukan refresh token
// Ketika new login token direfresh
// Token akan expired meskipun dalam keadang login

// Ketika token pertama expired, maka beri token kedua. Jika token kedua expired maka user harus login ulang
// Ketika user melakukan login dua kali maka ia mendapat dua token
// Token bisa disimpan di local storage browser, atau local storage mobile app

// Jika token expired, maka beri token baru dan timpa old token pada local storage.
// Ketika token expired maka request new token
// Token akan diberi ketika user login bukan register

// Jika JWT sudah digunakan, maka autentifikasi lain tidak bisa digunakan
// Meskipun token pertama dan kedua berbeda, tapi ketika di decode maka nilai aslinya tetap sama
// encrypt => menghasilkan kode acak rahasia
// decrypt => membuka encrpt dan mendapat data asli

// Buat middleware untuk pengecekan role, ex. jika 1 = admin etc
// token kedua dibuat lebih panjang expirednya

